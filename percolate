#!/usr/bin/env node

var coffee = require('coffee-script'),
	fs = require('fs'),
	_ = require('underscore')._,
	startDir = process.argv[2],  // TODO: handle arguments more elegantly... consider using switches, etc
	buffer = {},
	count = 0,
	walk = function(dir, callback) {
		// Make sure that 'callback' is a function
		if (typeof callback !== 'function') {
			callback = function(error, file) {};
		}

		fs.readdir(dir, function(err, list) {
			if (err) {
				return callback(err);
			}

			list.forEach(function(file) {
				var path = dir + '/' + file;
				fs.stat(path, function(err, stat) {
					if (stat && stat.isDirectory()) {
						walk(path, callback);
					} else {
						count++;
						callback(null, path);
					}
				});
			});
		});
	},
	compileComplete = function() {
		var list = _.keys(buffer);
		list = _.sortBy(list, function(key) {
			return key;
		});

		console.log(list);
	};

walk(startDir, function(err, path) {
	//console.log(path);

	fs.readFile(path, 'utf8', function(err, data) {
		if (err) {
			return;
		}
	
		var js = coffee.compile(data),
			keys;
		buffer[path] = js;
		keys = _.keys(buffer);

		if (keys.length === count) {
			compileComplete();
		}
	});
});

// TODO: Sort buffer by index (alphabetical), then compile
//var list = _.keys(buffer);
//list = _.sortBy(list, function(item) {
//	return item;
//});
//
//_.forEach(list, function(key) {
//	var contents = buffer[key];
//	// Write contents to file...
//});



//process.argv.slice(2).forEach(function(arg) {
//	console.log(arg);
//});